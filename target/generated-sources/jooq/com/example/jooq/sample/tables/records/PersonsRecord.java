/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.sample.tables.records;


import com.example.jooq.sample.tables.Persons;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonsRecord extends TableRecordImpl<PersonsRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>test.persons.id</code>.
     */
    public PersonsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>test.persons.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.persons.productname</code>.
     */
    public PersonsRecord setProductname(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>test.persons.productname</code>.
     */
    public String getProductname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.persons.brandname</code>.
     */
    public PersonsRecord setBrandname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>test.persons.brandname</code>.
     */
    public String getBrandname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.persons.cost</code>.
     */
    public PersonsRecord setCost(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>test.persons.cost</code>.
     */
    public Integer getCost() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Persons.PERSONS.ID;
    }

    @Override
    public Field<String> field2() {
        return Persons.PERSONS.PRODUCTNAME;
    }

    @Override
    public Field<String> field3() {
        return Persons.PERSONS.BRANDNAME;
    }

    @Override
    public Field<Integer> field4() {
        return Persons.PERSONS.COST;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getProductname();
    }

    @Override
    public String component3() {
        return getBrandname();
    }

    @Override
    public Integer component4() {
        return getCost();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getProductname();
    }

    @Override
    public String value3() {
        return getBrandname();
    }

    @Override
    public Integer value4() {
        return getCost();
    }

    @Override
    public PersonsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PersonsRecord value2(String value) {
        setProductname(value);
        return this;
    }

    @Override
    public PersonsRecord value3(String value) {
        setBrandname(value);
        return this;
    }

    @Override
    public PersonsRecord value4(Integer value) {
        setCost(value);
        return this;
    }

    @Override
    public PersonsRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonsRecord
     */
    public PersonsRecord() {
        super(Persons.PERSONS);
    }

    /**
     * Create a detached, initialised PersonsRecord
     */
    public PersonsRecord(Integer id, String productname, String brandname, Integer cost) {
        super(Persons.PERSONS);

        setId(id);
        setProductname(productname);
        setBrandname(brandname);
        setCost(cost);
    }
}
